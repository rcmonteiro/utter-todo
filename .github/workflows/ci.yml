name: CI
 
on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize]

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: Build and Test
    timeout-minutes: 15
    runs-on: ubuntu-latest

    services:
      postgres:
        image: bitnami/postgresql
        ports:
          - 5432:5432
        env:
          POSTGRESQL_USERNAME: docker
          POSTGRESQL_PASSWORD: docker
          POSTGRESQL_DATABASE: utter-todo
      
      api:
        image: rcmonteiro/utter-todo-api:latest
        ports:
          - 4000:4000
        env:
          JWT_SECRET: secret
          API_PORT: 4000
          DB_URL: postgresql://docker:docker@localhost:5432/utter-todo?schema=public
          DB_TEST_URL: postgresql://docker:docker@localhost:5432/utter-todo?schema=public

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9.1.1
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
 
      - name: Install dependencies
        run: pnpm install
 
      - name: Build
        run: pnpm build
        env:
          NODE_ENV: test
          API_URL: http://localhost:4000
          NEXT_PUBLIC_APP_URL: http://localhost:50789
          DB_URL: postgresql://docker:docker@localhost:5432/utter-todo?schema=public
          DB_TEST_URL: postgresql://docker:docker@localhost:5432/utter-todo?schema=public 

      - name: Run all unit tests
        run: pnpm run test
        env:
          JWT_SECRET: secret
          API_PORT: 4000
          DB_URL: postgresql://docker:docker@localhost:5432/utter-todo?schema=public
          DB_TEST_URL: postgresql://docker:docker@localhost:5432/utter-todo?schema=public

      - name: Run all e2e tests
        run: |
          cd apps/api
          pnpm drizzle-kit push
          pnpm run test:e2e

      - name: Install Playwright Browsers
        run: |
          cd apps/web
          pnpm add -g playwright
          pnpm exec playwright install --with-deps

      - name: Run Playwright tests
        run: |
          cd apps/web
          npx playwright test
        env:
          NODE_ENV: test
          API_URL: http://localhost:4000
          NEXT_PUBLIC_APP_URL: http://localhost:50789

      - name: Create tag
        id: create_tag
        run: |
          SHA=$(echo $GITHUB_SHA | head -c7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Login on Container Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create API as a Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.api
          push: true
          tags: rcmonteiro/utter-todo-api:${{ steps.create_tag.outputs.sha }},rcmonteiro/utter-todo-api:latest
      - name: Build and Push to Docker Hub
        run: | 
          docker build -f Dockerfile.api -t rcmonteiro/utter-todo-api:${{ steps.create_tag.outputs.sha }} .
          docker push rcmonteiro/utter-todo-api:${{ steps.create_tag.outputs.sha }}

      - name: Create WEB as a Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.web
          push: true
          tags: rcmonteiro/utter-todo-web:${{ steps.create_tag.outputs.sha }},rcmonteiro/utter-todo-web:latest
      - name: Build and Push to Docker Hub
        run: | 
          docker build -f Dockerfile.web -t rcmonteiro/utter-todo-web:${{ steps.create_tag.outputs.sha }} .
          docker push rcmonteiro/utter-todo-web:${{ steps.create_tag.outputs.sha }}
      